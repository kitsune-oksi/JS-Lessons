[{"/Users/nurova/Desktop/temp/JS Lessons/src/index.tsx":"1","/Users/nurova/Desktop/temp/JS Lessons/src/redux/state.ts":"2","/Users/nurova/Desktop/temp/JS Lessons/src/App.tsx":"3","/Users/nurova/Desktop/temp/JS Lessons/src/redux/currencyReducer.ts":"4","/Users/nurova/Desktop/temp/JS Lessons/src/lessons/lesson1/lesson1.tsx":"5","/Users/nurova/Desktop/temp/JS Lessons/src/redux/actions.ts":"6","/Users/nurova/Desktop/temp/JS Lessons/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx":"7","/Users/nurova/Desktop/temp/JS Lessons/src/components/CurrencyExchange/CurrencyExchange.tsx":"8","/Users/nurova/Desktop/temp/JS Lessons/src/lessons/lesson2/lesson2.ts":"9"},{"size":321,"mtime":1685516321281,"results":"10","hashOfConfig":"11"},{"size":413,"mtime":1685517767906,"results":"12","hashOfConfig":"11"},{"size":610,"mtime":1686032911577,"results":"13","hashOfConfig":"11"},{"size":1510,"mtime":1685620980250,"results":"14","hashOfConfig":"11"},{"size":864,"mtime":1685617099910,"results":"15","hashOfConfig":"11"},{"size":1535,"mtime":1685428985483,"results":"16","hashOfConfig":"11"},{"size":5518,"mtime":1685620453753,"results":"17","hashOfConfig":"11"},{"size":3871,"mtime":1685517483468,"results":"18","hashOfConfig":"11"},{"size":6812,"mtime":1686745600788,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"f51v0m",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nurova/Desktop/temp/JS Lessons/src/index.tsx",[],["40","41"],"/Users/nurova/Desktop/temp/JS Lessons/src/redux/state.ts",[],"/Users/nurova/Desktop/temp/JS Lessons/src/App.tsx",[],"/Users/nurova/Desktop/temp/JS Lessons/src/redux/currencyReducer.ts",[],"/Users/nurova/Desktop/temp/JS Lessons/src/lessons/lesson1/lesson1.tsx",[],"/Users/nurova/Desktop/temp/JS Lessons/src/redux/actions.ts",[],"/Users/nurova/Desktop/temp/JS Lessons/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx",["42","43","44","45"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyState, CurrencyType} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    小hangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\nimport {IGlobalState} from \"../../redux/state\";\r\n\r\nexport const CurrencyExchangeContainer: React.FC = props => {\r\n\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    //     setCurrencyAmount,\r\n    //     setAction,\r\n    //     changeCurrency,\r\n    // } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const currency = useSelector<IGlobalState, CurrencyState>(state => state.currency);\r\n    const currencies = currency.currencies;\r\n    const currentCurrency = currency.currentCurrency;\r\n    const isBuying = currency.isBuying;\r\n    const amountOfBYN = currency.amountOfBYN;\r\n    const amountOfCurrency = currency.amountOfCurrency;\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value))\r\n                } else {\r\n                    // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)))\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value))\r\n                } else {\r\n                    // setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value))\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n        e.currentTarget.dataset.currency && dispatch(小hangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n        console.log(currentCurrency)\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ({currency}: { currency: CurrencyState }): CurrencyState => {\r\n//     return {\r\n//         currencies: currency.currencies,\r\n//         currentCurrency: currency.currentCurrency,\r\n//         isBuying: currency.isBuying,\r\n//         amountOfBYN: currency.amountOfBYN,\r\n//         amountOfCurrency: currency.amountOfCurrency,\r\n//     };\r\n// };\r\n\r\n// type MapDispatchToPropsType = {\r\n//     setCurrencyAmount: (amountOfBYN: string, amountOfCurrency: string) => void\r\n//     setAction: (isBuying: boolean) => void\r\n//     changeCurrency: (currency: string) => void\r\n// }\r\n\r\n// type MapDispatchToPropsType = ReturnType<typeof mapDispatchToProps>\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>): MapDispatchToPropsType => {\r\n//     return {\r\n//         setCurrencyAmount (amountOfBYN: string, amountOfCurrency: string) {\r\n//             dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n//         },\r\n//         setAction (isBuying: boolean) {\r\n//             dispatch(ChangeActionAC(isBuying));\r\n//         },\r\n//         changeCurrency (currency: string) {\r\n//             dispatch(小hangeCurrentCurrencyAC(currency));\r\n//         },\r\n//     };\r\n// };\r\n//\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\n\r\n// const actionCreators = {\r\n//     ChangeCurrencyFieldAC,\r\n//     ChangeActionAC,\r\n//     小hangeCurrentCurrencyAC\r\n// }\r\n//\r\n// const connector = connect(mapStateToProps, actionCreators);\r\n//\r\n// type TProps = ConnectedProps<typeof connector>;\r\n//\r\n// export default connector(CurrencyEContainer);\r\n\r\n","/Users/nurova/Desktop/temp/JS Lessons/src/components/CurrencyExchange/CurrencyExchange.tsx",[],"/Users/nurova/Desktop/temp/JS Lessons/src/lessons/lesson2/lesson2.ts",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":4,"column":9,"nodeType":"53","messageId":"54","endLine":4,"endColumn":17},{"ruleId":"51","severity":1,"message":"55","line":9,"column":5,"nodeType":"53","messageId":"54","endLine":9,"endColumn":26},{"ruleId":"51","severity":1,"message":"56","line":11,"column":9,"nodeType":"53","messageId":"54","endLine":11,"endColumn":16},{"ruleId":"51","severity":1,"message":"57","line":11,"column":18,"nodeType":"53","messageId":"54","endLine":11,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":216,"column":1,"nodeType":"60","endLine":217,"endColumn":3},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","'CurrencyReducersTypes' is defined but never used.","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]